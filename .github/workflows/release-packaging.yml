name: Release Packaging

on:
  push:
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  check:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v1

      - name: Load dotenv
        run: just ci-load-dotenv

      - name: Check
        run: just fmt

      - name: Ensure version is equal to tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          [ "${{ env.game_version }}" == "${{ env.BRANCH_NAME }}" ] || exit 2

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        version: [ v4.0.4-stable, v4.1.3-stable, v4.2.1-stable ]

    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v1

      - uses: actions/setup-node@v2
        with:
          node-version: 16.13.0

      - name: Install npx
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: npm i -g npx

      - name: Start HTTP server
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: npx http-server --port=7121 ./test/integration/streaming/ &

      - name: Run unit tests
        shell: bash
        run: just unit
        env:
          GODOT_VERSION: ${{ matrix.godot_version }}

      - name: Run (some) integration tests
        shell: bash
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: just integration
        env:
          GODOT_VERSION: ${{ matrix.godot_version }}

  publish:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: [check, test]

    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v1

      - name: Load dotenv
        run: just ci-load-dotenv

      - name: Publish
        run: just publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
